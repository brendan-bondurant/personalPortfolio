name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
        id-token: write
        contents: read
    steps:
      # Step to checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Install OIDC Client from Core Package
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@latest @actions/http-client@latest

      # Retrieve the OIDC token for GitHub Actions
      - name: Get Id Token
        uses: actions/github-script@v6.3.0
        id: idtoken
        with:
            script: |
                const coredemo = require('@actions/core')
                return await coredemo.getIDToken()
            result-encoding: string

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Restore dependencies for the .NET project
      - name: Install dependencies
        run: dotnet restore ./MyPortfolio/MyPortfolio.csproj

      # Build the .NET project and output to wwwroot
      - name: Build application
        run: dotnet publish ./MyPortfolio/MyPortfolio.csproj -c Release -o ./MyPortfolio/wwwroot

      # Deploy to Azure Static Web Apps
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AMBITIOUS_FIELD_069E1B81E }}
          action: "upload" # Explicit deployment action
          app_location: "./MyPortfolio/wwwroot" # App source code path
          skip_app_build: true
          # api_location: "" # No backend API
          # output_location: "wwwroot" # Built app content directory
          # github_id_token: ${{ steps.idtoken.outputs.result }}
